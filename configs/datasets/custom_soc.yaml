# Custom SOC Dataset Configuration
# For custom Security Operations Center logs in JSON format (Elastic Endpoint Security)

dataset_name: custom_soc
dataset_type: custom

# Data paths
data:
  # Path to custom dataset folder
  root_dir: ../custom_dataset/
  
  # JSON files containing logs
  files:
    - endpoint_file.json      # File system events
    - endpoint_network.json   # Network events
    - endpoint_process.json   # Process events
  
  # Output paths
  processed_dir: data/processed/custom_soc/
  graph_cache_dir: data/cache/custom_soc/
  
# Data format (Elastic Endpoint Security)
format:
  type: json               # json, csv, or parquet
  schema: elastic          # elastic (ELK stack) or custom
  
  # Elastic Endpoint Security field mapping
  event_field: "@timestamp"
  
  # Event categories (from event.category field)
  event_categories:
    - file
    - network
    - process
  
  # Key fields for entity extraction
  process_entity_field: "process.entity_id"
  process_executable_field: "process.executable"
  process_name_field: "process.name"
  process_pid_field: "process.pid"
  
  file_path_field: "file.path"
  file_name_field: "file.name"
  
  network_dest_ip_field: "destination.ip"
  network_dest_port_field: "destination.port"
  network_src_ip_field: "source.ip"
  network_src_port_field: "source.port"
  
  # Additional attributes to extract
  attributes_fields:
    - "user.name"
    - "host.hostname"
    - "event.action"
    - "event.outcome"
    - "network.transport"
    
# Graph construction
graph:
  # Node types (based on Elastic Endpoint Security)
  node_types:
    - file
    - process
    - network
    - registry
    
  # Edge types (based on event.action from Elastic)
  # File events
  file_edge_types:
    - file_creation
    - file_deletion
    - file_rename
    - file_modification
    - file_open
    - file_close
  
  # Network events
  network_edge_types:
    - connection_attempted
    - connection_accepted
    - disconnect_received
    - ipv4_connection_attempt_event
    - ipv6_connection_attempt_event
  
  # Process events
  process_edge_types:
    - fork
    - exec
    - end
    - start
    
  # Graph features
  node_features:
    type: mixed             # categorical, numerical, or mixed
    embedding_dim: 100
    use_text_features: true
    use_process_names: true
    use_file_paths: true
    
  edge_features:
    use_timestamps: true
    use_attributes: true
    use_event_actions: true
    
  # Temporal settings
  temporal:
    enabled: true
    window_size: 3600       # 1 hour windows (in seconds)
    stride: 1800            # 30 minute stride
    
# Preprocessing
preprocessing:
  # Data cleaning
  remove_duplicates: true
  handle_missing: skip     # skip, fill, or ignore
  remove_self_loops: true
  
  # Feature engineering
  extract_time_features: true
  normalize_features: true
  
  # Filtering
  min_node_degree: 1
  max_graph_size: 100000   # Max nodes per graph
  
  # Entity resolution
  entity_resolution:
    enabled: true
    match_fields:
      - process.entity_id
      - process.executable
      - file.path
      
  # Event filtering (optional)
  filter_events:
    enabled: false
    # Include only specific event actions
    include_actions: []
    # Exclude specific event actions
    exclude_actions: []
    
# Labels
labels:
  # Label source
  source: groundtruth      # groundtruth or heuristic
  label_file: Ground_Truth/custom_labels.json
  
  # Label mapping
  benign: 0
  malicious: 1
  
  # Default label for unlabeled data
  default_label: 0

# Model compatibility
# This configuration works with all models in the framework
models:
  compatible:
    - continuum_fl
    - kairos
    - magic
    - orthrus
    - threatrace
  
  # Class balancing
  balance_classes: false
  oversample_minority: false
  undersample_majority: false
  
# Splitting
split:
  method: temporal         # temporal, random, or stratified
  train_ratio: 0.7
  val_ratio: 0.15
  test_ratio: 0.15
  
  # Temporal split (if method=temporal)
  temporal_split:
    by: day                # day, week, or custom
    train_days: 14
    val_days: 3
    test_days: 3
    
# Data statistics
statistics:
  compute_stats: true
  stats_output: data/stats/custom_soc.json
  
# Performance optimization
optimization:
  chunk_size: 10000        # Process data in chunks (for large files)
  num_workers: 4           # Parallel processing workers
  cache_processed: true    # Cache preprocessed data
  use_mmap: true           # Use memory mapping for large files
  
# Validation
validation:
  validate_schema: true
  check_consistency: true
  report_anomalies: true
